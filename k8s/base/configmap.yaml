apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-config
  labels:
    app: webapp-production
    component: config
data:
  # Application Configuration
  NODE_ENV: "production"
  PORT: "3000"
  API_PORT: "3001"
  WEBSOCKET_PORT: "3002"
  
  # API Configuration
  API_BASE_URL: "/api/v1"
  API_TIMEOUT: "30000"
  API_RATE_LIMIT: "100"
  
  # WebSocket Configuration
  WS_HEARTBEAT_INTERVAL: "30000"
  WS_MAX_CONNECTIONS: "1000"
  
  # Frontend Configuration
  REACT_APP_API_URL: "/api/v1"
  REACT_APP_WS_URL: "/ws"
  REACT_APP_CDN_URL: ""
  REACT_APP_VERSION: "1.0.0"
  
  # Cache Configuration
  REDIS_KEY_PREFIX: "webapp:"
  REDIS_TTL: "3600"
  REDIS_MAX_RETRIES: "3"
  
  # Database Configuration
  DB_POOL_MIN: "2"
  DB_POOL_MAX: "10"
  DB_CONNECTION_TIMEOUT: "60000"
  DB_IDLE_TIMEOUT: "300000"
  
  # Security Configuration
  JWT_EXPIRES_IN: "24h"
  CORS_ORIGIN: "*"
  HELMET_ENABLED: "true"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_PATH: "/health"
  
  # Logging Configuration
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"
  LOG_MAX_SIZE: "100m"
  LOG_MAX_FILES: "5"
  
  # Upload Configuration
  MAX_FILE_SIZE: "50mb"
  ALLOWED_FILE_TYPES: "image/*,video/*,audio/*"
  UPLOAD_PATH: "/uploads"
  
  # Feature Flags
  ENABLE_WEBSOCKET: "true"
  ENABLE_VIDEO_PROCESSING: "true"
  ENABLE_REAL_TIME_NOTIFICATIONS: "true"
  ENABLE_FILE_UPLOADS: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: webapp-production
    component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50m;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream backends
        upstream backend_api {
            least_conn;
            server webapp-api-service:3001;
            keepalive 32;
        }

        upstream websocket_service {
            ip_hash;
            server webapp-websocket-service:3002;
        }

        # Main server block
        server {
            listen 80;
            listen [::]:80;
            server_name _;

            # Health check
            location /nginx-health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Static frontend files
            location / {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ /index.html;
                expires 1d;
                add_header Cache-Control "public, immutable";
            }

            # API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://backend_api;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # WebSocket routes
            location /ws {
                proxy_pass http://websocket_service;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 7d;
                proxy_send_timeout 7d;
                proxy_read_timeout 7d;
            }

            # Auth endpoints with stricter rate limiting
            location /api/auth/ {
                limit_req zone=auth burst=10 nodelay;
                proxy_pass http://backend_api;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # File uploads
            location /api/upload/ {
                client_max_body_size 50m;
                proxy_pass http://backend_api;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 300s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
            }
        }
    }
